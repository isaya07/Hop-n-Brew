{"version":3,"sources":["webpack:///vendor.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/pouchdb-browser/lib/index.es.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/immediate/lib/browser.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/pouchdb-browser/node_modules/lie/lib/browser.js","webpack:///./node_modules/argsarray/index.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/pouchdb-browser/node_modules/debug/src/browser.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/pouchdb-browser/node_modules/debug/src/debug.js","webpack:///./node_modules/pouchdb-browser/node_modules/ms/index.js","webpack:///./node_modules/pouchdb-browser/node_modules/spark-md5/spark-md5.js","webpack:///./node_modules/vuvuzela/index.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js"],"names":["webpackJsonp","15","module","exports","g","this","Function","eval","e","window","247","__webpack_exports__","__webpack_require__","Object","defineProperty","value","global","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","slice","target","byteLength","targetArray","Uint8Array","sourceArray","set","cloneBinaryObject","size","type","webkitSlice","isPlainObject","proto","getPrototypeOf","Ctor","constructor","funcToString","call","objectCtorString","clone","newObject","i","len","Array","isArray","length","Date","toISOString","prototype","hasOwnProperty","once","fun","called","__WEBPACK_IMPORTED_MODULE_2_argsarray___default","args","Error","apply","toPromise","func","self","usedCB","pop","promise","PouchPromise$1","fulfill","reject","resp","callback","err","mesg","push","then","result","logApiCall","name","listeners","logArgs","emit","origCallback","res","responseArgs","concat","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","mangle","key","unmangle","substring","Map$1","_store","Set$1","array","add","pick","obj","arr","prop","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","collapseResultsAndFinish","results","perDocResults","forEach","docs","info","id","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","Math","min","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","offset","docId","j","docIdx","docRequests","requestsById","get","docOpts","open_revs","map","request","rev","filter","formatResult","param","error","requests","ExportedMap","has","isChromeApp","chrome","storage","local","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","addListener","db_name","dbName","newValue","addEventListener","attachEvent","Changes","__WEBPACK_IMPORTED_MODULE_3_events__","_listeners","guardedConsole","method","console","arguments","randomNumber","max","parseInt","maxTimeout","random","defaultBackOff","explainError","status","str","PouchError","reason","message","createError","CustomPouchError","p","undefined","generateErrorFromResponse","data","UNKNOWN_ERROR","tryFilter","doc","req","msg","toString","BAD_REQUEST","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","f","invalidIdError","INVALID_ID","test","RESERVED_ID","MISSING_ID","isRemote","_remote","listenerCount","ee","parseDesignDocFunctionName","s","parts","split","normalizeDesignDocFunctionName","normalized","join","parseUri","m","parser","exec","uri","keys","encoded","indexOf","decodeURIComponent","qName","replace","qParser","$0","$1","$2","scopeEval","source","scope","values","upsert","diffFun","docRev","_rev","newDoc","updated","_id","tryAndPut","put","__WEBPACK_IMPORTED_MODULE_0_uuid___default","a","v4","toLowerCase","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","b","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","mid","low","high","insertSorted","idx","splice","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","queue","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","stemmedRevs","stemmed","merge","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","tryCatchInChangeListener","Changes$2","onDestroy","cancel","complete","removeAllListeners","removeListener","on","onChange","isCancelled","bind","validateChanges","processChange","changeList","style","changes","_conflicts","compare","left","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","_revisions","start","computeHeight","height","edges","prnt","rev$$1","from","to","edge","allDocsKeysQuery","api","skip","limit","descending","_allDocs","finalResults","all","subOpts","$inject_Object_assign","optKey","resolve","total_rows","rows","doNextCompaction","task","_compactionQueue","catch","last_seq","_compact","__WEBPACK_IMPORTED_MODULE_5_immediate___default","shift","attachmentNameError","charAt","AbstractPouchDB","TaskQueue$1","parseAdapter","match","adapter","adapters","PouchDB$3","preferredAdapters","prefix","adapterName","localStorage","use_prefix","prepareForDestruction","onDestroyed","from_constructor","onClosed","__opts","auto_compaction","prefixedName","backend","_adapter","valid","fail","ready","debugPouch","PouchDB","debug","__WEBPACK_IMPORTED_MODULE_6_debug___default","logs","logId","getFieldFromDoc","parsedField","compare$1","parseField","fieldName","fields","current","ch","isCombinationalField","field","combinationFields","getKey","getValue","mergeAndedSelectors","selectors","selector","matcher","$eq","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","$gte","$gt","$lte","$lt","$ne","massageSelector","input","wasAnded","orOrNor","subSelector","pad","padWith","upToLength","padding","targetLength","padLeft","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","isNaN","origKey","toJSON","k","val","indexify","numToIndexableString","toIndexableString","objKey","SEP","parseNumber","num","originalIdx","neg","numAsString","magAsString","MAGNITUDE_DIGITS","magnitude","MIN_MAGNITUDE","parseFloat","stack","metaStack","lastMetaElement","element","lastElementIndex","index","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","createFieldSorter","getFieldValuesAsArray","sorting","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","requestDef","inMemoryFields","row","rowFilter","fieldSorter","every","docFieldValue","matchCominationalSelector","matchSelector","userOperator","userValue","some","orMatchers","find","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","RegExp","typeMatch","matchesSelector","rowsMatched","evalFilter","evalView","validate","filterName","normalize","view","shouldFilter","changesHandler","doc_ids","viewName","ddoc","mapFun","views","MISSING_DOC","doChanges","filterFun","filters","applyChangesFilterPlugin","_changesFilterPlugin","toObject","reduce","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","uuid","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","thisAtob","arrayBufferToBinaryString","buffer","binary","bytes","String","fromCharCode","readAsBinaryString","blob","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","thisBtoa","rawToBase64","raw","sliceBlob","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","next","setImmediateShim","loadNextChunk","done","destroy","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","ceil","__WEBPACK_IMPORTED_MODULE_7_spark_md5___default","stringMd5","hash","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","prev","cb","writeDoc","previousWinningRev","previouslyDeleted","isRoot","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$1","winningRevIsDeleted","delta","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","safeJsonParse","JSON","parse","__WEBPACK_IMPORTED_MODULE_8_vuvuzela___default","safeJsonStringify","json","stringify","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","seq","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","attNames","compactRevs","count","deleteOrphanedAttachments","possiblyOrphanedDigests","attAndSeqStore","IDBKeyRange","bound","attStore","delete","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","openCursor","only","event","cursor","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","startTransaction","DOC_STORE","LOCAL_STORE","META_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","metaDoc","updateDocCountIfReady","verifyAttachments","preconditionErrored","fetchExistingDocs","onAllDocsProcessed","allDocsProcessed","idbProcessDocs","revs_limit","docCount","docCountDelta","numFetched","readMetadata","notify","_meta","verifyAttachment","MISSING_STUB","finish","digests","filename","attErr","isUpdate","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","insertAttachmentMappings","putReq","onerror","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","runBatchedCursor","keyRange","batchSize","onBatch","onGetAll","valuesBatch","keysBatch","pseudoCursor","onGetAllKeys","continuePseudoCursor","newKeyRange","lastKey","upper","upperOpen","code","lowerBound","getAll","getAllKeys","onCursor","useGetAll","onSuccess","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","fetchDocAsynchronously","docIdRevIndex","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","onTxnComplete","startkey","endkey","inclusive_end","keyRangeError","checkBlobSupport","DETECT_BLOB_SUPPORT_STORE","matchedChrome","navigator","userAgent","matchedEdge","countDocs","tryCode","applyNext","running","enqueueTask","action","processMetadataAndWinningDoc","winningDoc","lastSeq","filtered","numResults","returnDocs","onBatchDone","winningDocs","metadatas","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","docIds","docIdsToMetadata","continuous","ExportedSet","since","return_docs","objectStores","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","range","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","onGetMetadataSeq","metadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","updateSeq","doc_count","update_seq","idb_attachment_format","_changes","_close","close","cachedDBs","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","ret","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","completeSetup","storedMetaDoc","storeMetaDocIfReady","instanceKey","onversionchange","blobSupportPromise","version","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","select","table","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","websqlBulkDocs","websqlChanges","_name","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","params","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","hex","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","digestSeqs","digestSeqPairs","pair","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","onGetVersion","dbVersion","meta","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","dbid","tasks","nextMigration","fetchVersion","db_version","getMaxSeq","latest$$1","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","theSeq","theDocCount","websql_encoding","latestRev","totalRows","criteria","selectStmt","reportChange","maxSeq","escaped","putLocal","rowsAffected","removeLocal","store","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","wrappedFetch","wrappedPromise","fetch","response","fetchRequest","options","timer","headers","Headers","fetchOptions","credentials","processData","url","timeout","setTimeout","fetchResponse","statusCode","clearTimeout","text","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","onreadystatechange","XMLHttpRequest","exception","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","ajax$1","hasXhr","defaultBody","ajaxCore$1","v","missing","res$2","cache","ajax","ua","isSafari","isIE","isEdge","shouldCacheBust","hasArgs","now","pool","promiseFactories","runNext","onError","runNextBatch","thisErr","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$2","hasUrlPrefix","protocol","getHost","substr","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","ajax$$1","userOpts","reqAjax","ajaxOpts","defaultHeaders","_ajax","ajaxPromise","adapterFun$$1","setup","skipSetup","skip_setup","setupPromise","dbUrl","encodeAttachmentId","attachmentId","nAuth","token","unescape","Authorization","uuid$$1","compact","ping","compact_running","interval","doBulkGet","doBulkGetShim","MAX_SIMULTANEOUS_REVS","numBatches","batchNum","supportsBulkGet","supportsBulkGetMap","fetchAttachments","filenames","fetchAllAttachments","docOrDocs","revs_info","remove","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","Content-Type","_put","allDocs","start_key","end_key","paramStr","batch_size","CHANGES_BATCH_SIZE","heartbeat","DEFAULT_HEARTBEAT","requestTimeout","CHANGES_TIMEOUT_BUFFER","leftToFetch","feed","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","c","finished","revsDiff","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","log","TaskQueue$2","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","cachedViews","viewSignature","_cachedViews","promiseForView","diffFunction","fullViewName","depDbs","depDbName","registerDependentDatabase","lastSeqDoc","parseViewName","isGenOne","emitError","getBuiltIn","reduceFunString","builtInReduce","_sum","_count","_stats","mapper","origMap","reducer","builtIn","ddocValidator","abstract","viewCleanup","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRev","getDocs","state","getAllDocs","bulkGetOpts","bulkGetResponse","cancelled","bulkGetInfo","resultDocs","Boolean","hasAttachments","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","unshift","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","hasSessionId","LOWEST_SEQ","sessionId","props","rest","isForbiddenError","floor","backOff","retry","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","initCheckpointer","checkpointer","repId","checkpointOpts","writeSourceCheckpoint","writeTargetCheckpoint","writeDocs","changedDocs","currentBatch","bulkOpts","bulkDocs","completeReplication","errorsById","create","errorsNo","doc_write_failures","docs_written","errors","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","immediate","pendingBatch","changesOpts","live","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","sync$1","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removeAll","isChange","isDenied","isPaused","isActive","removed","addOneListener","listener","canceled","optsPush","optsPull","pull","out","success","replication","sync","other","__WEBPACK_IMPORTED_MODULE_0_uuid__","n","__WEBPACK_IMPORTED_MODULE_1_lie__","__WEBPACK_IMPORTED_MODULE_1_lie___default","__WEBPACK_IMPORTED_MODULE_2_argsarray__","__WEBPACK_IMPORTED_MODULE_4_inherits__","__WEBPACK_IMPORTED_MODULE_4_inherits___default","__WEBPACK_IMPORTED_MODULE_5_immediate__","__WEBPACK_IMPORTED_MODULE_6_debug__","__WEBPACK_IMPORTED_MODULE_7_spark_md5__","__WEBPACK_IMPORTED_MODULE_8_vuvuzela__","Promise","mangled","Symbol","Map","Set","getOwnPropertyDescriptor","species","setItem","getItem","eventFunction","inprogress","notifyLocalWindows","assign","nextSource","nextKey","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","hasName","newPromise","post","putDoc","force","oldRevId","oldRevNum","newRevNum","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","maxHeight","revTree","candidates","promises","onComplete","finishOpenRevs","existing","splittedRev","revNo","currentPath","hashIndex","indexOfRev","howMany","_revs_info","TypeError","incompatibleOpt","_type","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","usePrefix","deletedMap","trueName","execute","eventEmitter","Pouch","destructListeners","_destructionListeners","dbList","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","$elemMatch","$allMatch","$exists","$mod","neValue","$in","$nin","$size","$all","$regex","$type","atob","btoa","setImmediate","platform","IDBPouch","WebSqlPouch","HttpPouch$1","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","sumsqr","_sumsqr","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","metaDocId","defaultMetaDoc","docData","saveKeyValues","listOfDocsToPersist","docsToPersist","getQueue","updateView","updateViewInQueue","mapResults","processNextBatch","currentSeq","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","shouldReduce","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","stale","abstractQuery","mapreduce","updateTarget","updateSource","readOnlySource","comparisons","targetDoc","sourceDoc","1","cleanup","_readyCalled","248","rng","crypto","msCrypto","getRandomValues","rnds8","rnds","r","249","bytesToUuid","bth","byteToHex","250","nextTick","draining","oldQueue","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","document","createTextNode","observe","characterData","MessageChannel","createElement","scriptEl","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","4","isUndef","isDef","isTrue","isFalse","isPrimitive","isObject","_toString","isRegExp","isValidArrayIndex","isFinite","toNumber","makeMap","expectsLowerCase","list","hasOwn","fn","boundFn","_length","toArray","extend","_from","noop","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","isReserved","def","enumerable","writable","configurable","parsePath","bailRE","segments","handleError","vm","config","errorHandler","inBrowser","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","__proto__","copyAugment","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","dep","property","getter","setter","childOb","depend","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalizeDirectives","dirs","directives","update","mergeOptions","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","hyphenate","getPropDefaultValue","prevShouldConvert","default","$options","_props","getType","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","children","elm","context","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","normalizeEvent","capture","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","component","delay","getFirstComponentChild","initEvents","_events","_hasHookEvent","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","isWhitespace","resolveScopedSlots","initLifecycle","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","render","callHook","updateComponent","_update","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","queueActivatedComponent","queueWatcher","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","getData","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","resolveInject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","h","d","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","functional","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","staticRenderFns","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","initRender","renderContext","_c","$createElement","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","installedPlugins","_installedPlugins","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","isAsyncPlaceholder","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","addAttr","addDirective","arg","addHandler","important","warn","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","option","selectedIndex","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","dx","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","html","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","template","endPre","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","container","cloneNode","innerHTML","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","logError","counter","textNode","_resolve","uid","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","teardown","$mount","keepAlive","mountedNode","prepatch","insert","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","util","defineReactive","ssrContext","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","_scopeId","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","isTextInputType","vmodel","model$1","_vOptions","prevOptions","o","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","c$1","beforeUpdate","hasMove","offsetHeight","propertyName","_hasMove","platformComponents","decoder","content","div","regexEscapeRE","klass$1","style$1","modules$1","directives$1","baseOptions","he","decode","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","esc","tab","space","up","down","genGuard","stop","prevent","ctrl","alt","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","599","v1","600","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","_seedBytes","601","ii","602","INTERNAL","resolver","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","getThen","thenable","tryToUnwrap","tryCatch","iterable","resolveFromAll","outValue","race","REJECTED","FULFILLED","603","argsArray","604","EventEmitter","_maxListeners","isFunction","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","er","newListener","warned","trace","fired","position","evlistener","emitter","605","ctor","superCtor","super_","TempCtor","606","process","useColors","firebug","formatArgs","humanize","color","lastC","save","namespaces","removeItem","load","NODE_ENV","DEBUG","colors","formatters","enable","607","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","currentQueue","queueIndex","drainQueue","Item","title","browser","argv","versions","off","prependListener","prependOnceListener","cwd","chdir","umask","608","selectColor","createDebug","enabled","curr","ms","prevTime","coerce","format","formatter","names","skips","disable","609","fmtShort","round","fmtLong","plural","long","610","md5cycle","md5blk","md5blks","md5blk_array","md51","tail","lo","hi","md51_array","subarray","rhex","hex_chr","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","hexToBinaryString","SparkMD5","reset","lsw","clamp","begin","contents","_buff","_hash","_finish","getState","setState","hashBinary","611","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","617","71","isError","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","stringifyQuery","encode","val2","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","matched","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","findAnchor","installed","_Vue","registerInstance","callVal","registerRouteInstance","beforeCreate","_routerRoot","_router","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","segment","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","attachKeys","flags","sensitive","regexpToRegexp","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","pathToRegexpOptions","caseSensitive","regex","compileRouteRegex","instances","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","genKey","Time","_key","pushState","replaceState","runQueue","step","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","transitionTo","onAbort","confirmTransition","updateRoute","ensureURL","beforeHooks","iterator","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo"],"mappings":"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","file":"vendor.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 15:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 247:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid__ = __webpack_require__(599);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_uuid__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lie__ = __webpack_require__(602);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray__ = __webpack_require__(603);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_argsarray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_events__ = __webpack_require__(604);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_events___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_events__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_inherits__ = __webpack_require__(605);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immediate__ = __webpack_require__(250);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immediate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_immediate__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_debug__ = __webpack_require__(606);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_debug___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_debug__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_spark_md5__ = __webpack_require__(610);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_spark_md5___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_spark_md5__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vuvuzela__ = __webpack_require__(611);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_vuvuzela__);\n\n\n\n\n\n\n\n\n\n\n/* istanbul ignore next */\nvar PouchPromise$1 = typeof Promise === 'function' ? Promise : __WEBPACK_IMPORTED_MODULE_1_lie___default.a;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise$1(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(__WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    if (this._closed) {\n      return PouchPromise$1.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise$1.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise$1(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Changes, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        __WEBPACK_IMPORTED_MODULE_5_immediate___default()(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise$1(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Changes$2, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.normalize(opts);\n    if (PouchDB$3._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB$3._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise$1.all(keys.map(function (key) {\n    var subOpts = $inject_Object_assign({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise$1(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(AbstractPouchDB, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\nfunction AbstractPouchDB() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise$1.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$3.adapters;\n  var preferredAdapters = PouchDB$3.preferredAdapters;\n  var prefix = PouchDB$3.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchDB$3, AbstractPouchDB);\nfunction PouchDB$3(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$3)) {\n    return new PouchDB$3(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$3.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB$3.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB$3.adapters[opts.adapter] ||\n      !PouchDB$3.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$3.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$3.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$3.adapters = {};\nPouchDB$3.preferredAdapters = [];\n\nPouchDB$3.prefix = '_pouch_';\n\nvar eventEmitter = new __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(__WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype).forEach(function (key) {\n    if (typeof __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB$3);\n\nPouchDB$3.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$3.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$3.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$3.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$3);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$3.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB$3.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB$3;\n};\n\nPouchDB$3.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB$3.call(this, name, opts);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchAlt, PouchDB$3);\n\n  PouchAlt.preferredAdapters = PouchDB$3.preferredAdapters.slice();\n  Object.keys(PouchDB$3).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$3[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.3.4\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = __WEBPACK_IMPORTED_MODULE_6_debug___default.a;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = __WEBPACK_IMPORTED_MODULE_6_debug___default()('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(applyChangesFilterPlugin);\n\nPouchDB$3.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a() : new __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default.a.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default.a.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise$1.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise$1.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise$1(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n  var keyRangeError = keyRange && keyRange.error;\n  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n      keyRangeError.code === 0)) {\n    // DataError with error code 0 indicates start is less than end, so\n    // can just do an empty query. Else need to throw\n    return callback(createError(IDB_ERROR,\n      keyRangeError.name, keyRangeError.message));\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (opts.deleted === 'ok') {\n      results.push(row);\n      // deleted docs are okay with \"keys\" requests\n      if (deleted) {\n        row.value.deleted = true;\n        row.doc = null;\n      } else if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    } else if (!deleted && skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    callback(null, {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    });\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise$1(function (resolve) {\n    var blob = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nvar IDBPouch = function (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n};\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (opts.deleted === 'ok') {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              continue;\n            }\n          }\n          results.push(doc);\n        }\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = $inject_Object_assign({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nvar WebSqlPouch = function (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n};\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise$1(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise$1.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise$1(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise$1.resolve();\n  }\n\n  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise$1(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise$1.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise$1.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise$1.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise$1(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise$1.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nvar HttpPouch$1 = function (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n};\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise$1.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise$1.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise$1.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise$1.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise$1.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise$1.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise$1.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise$1.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    if (this.readOnlySource) {\n      return PouchPromise$1.resolve(true);\n    }\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.readOnlySource = true;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise$1.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise$1(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise$1.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Replication, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\nfunction Replication() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Sync, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise$1.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$3.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PouchDB$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(15)))\n\n/***/ }),\n\n/***/ 248:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)))\n\n/***/ }),\n\n/***/ 249:\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ }),\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)))\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"production\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"production\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"production\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (false) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(15)))\n\n/***/ }),\n\n/***/ 599:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar v1 = __webpack_require__(600);\nvar v4 = __webpack_require__(601);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n/***/ }),\n\n/***/ 600:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(248);\nvar bytesToUuid = __webpack_require__(249);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n/***/ }),\n\n/***/ 601:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(248);\nvar bytesToUuid = __webpack_require__(249);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n/***/ }),\n\n/***/ 602:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar immediate = __webpack_require__(250);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n/***/ }),\n\n/***/ 603:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 604:\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n\n/***/ 605:\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n\n/***/ 606:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(608);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = Object({\"NODE_ENV\":\"production\"}).DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(607)))\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 608:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(609);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n\n/***/ 609:\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n/***/ }),\n\n/***/ 610:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (factory) {\n    if (true) {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n/***/ }),\n\n/***/ 611:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n/***/ }),\n\n/***/ 617:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(4);\n__webpack_require__(71);\nmodule.exports = __webpack_require__(247);\n\n\n/***/ }),\n\n/***/ 71:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VueRouter);\n\n\n/***/ })\n\n},[617]);\n\n\n// WEBPACK FOOTER //\n// vendor.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 15\n// module chunks = 1","import uuidV4 from 'uuid';\nimport lie from 'lie';\nimport getArguments from 'argsarray';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport nextTick from 'immediate';\nimport debug from 'debug';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\n\n/* istanbul ignore next */\nvar PouchPromise$1 = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise$1(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise$1.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise$1.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise$1(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise$1(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$2, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.normalize(opts);\n    if (PouchDB$3._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB$3._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise$1.all(keys.map(function (key) {\n    var subOpts = $inject_Object_assign({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise$1(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise$1.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$3.adapters;\n  var preferredAdapters = PouchDB$3.preferredAdapters;\n  var prefix = PouchDB$3.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB$3, AbstractPouchDB);\nfunction PouchDB$3(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$3)) {\n    return new PouchDB$3(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$3.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB$3.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB$3.adapters[opts.adapter] ||\n      !PouchDB$3.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$3.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$3.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$3.adapters = {};\nPouchDB$3.preferredAdapters = [];\n\nPouchDB$3.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB$3);\n\nPouchDB$3.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$3.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$3.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$3.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$3);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$3.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB$3.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB$3;\n};\n\nPouchDB$3.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB$3.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB$3);\n\n  PouchAlt.preferredAdapters = PouchDB$3.preferredAdapters.slice();\n  Object.keys(PouchDB$3).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$3[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.3.4\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = debug;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = debug('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(applyChangesFilterPlugin);\n\nPouchDB$3.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise$1.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise$1.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise$1(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n  var keyRangeError = keyRange && keyRange.error;\n  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n      keyRangeError.code === 0)) {\n    // DataError with error code 0 indicates start is less than end, so\n    // can just do an empty query. Else need to throw\n    return callback(createError(IDB_ERROR,\n      keyRangeError.name, keyRangeError.message));\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (opts.deleted === 'ok') {\n      results.push(row);\n      // deleted docs are okay with \"keys\" requests\n      if (deleted) {\n        row.value.deleted = true;\n        row.doc = null;\n      } else if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    } else if (!deleted && skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    callback(null, {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    });\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise$1(function (resolve) {\n    var blob = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nvar IDBPouch = function (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n};\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (opts.deleted === 'ok') {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              continue;\n            }\n          }\n          results.push(doc);\n        }\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = $inject_Object_assign({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nvar WebSqlPouch = function (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n};\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise$1(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise$1.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise$1(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise$1.resolve();\n  }\n\n  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise$1(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise$1.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise$1.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise$1.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise$1(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise$1.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nvar HttpPouch$1 = function (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n};\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise$1.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise$1.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise$1.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise$1.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise$1.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise$1.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise$1.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise$1.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    if (this.readOnlySource) {\n      return PouchPromise$1.resolve(true);\n    }\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.readOnlySource = true;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise$1.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise$1(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise$1.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise$1.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$3.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/lib/index.es.js\n// module id = 247\n// module chunks = 1","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/lib/rng-browser.js\n// module id = 248\n// module chunks = 1","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/lib/bytesToUuid.js\n// module id = 249\n// module chunks = 1","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/immediate/lib/browser.js\n// module id = 250\n// module chunks = 1","/*!\n * Vue.js v2.4.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (process.env.NODE_ENV !== 'production' && !source) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 4\n// module chunks = 1","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/index.js\n// module id = 599\n// module chunks = 1","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/v1.js\n// module id = 600\n// module chunks = 1","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uuid/v4.js\n// module id = 601\n// module chunks = 1","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/node_modules/lie/lib/browser.js\n// module id = 602\n// module chunks = 1","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/argsarray/index.js\n// module id = 603\n// module chunks = 1","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 604\n// module chunks = 1","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = 605\n// module chunks = 1","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/node_modules/debug/src/browser.js\n// module id = 606\n// module chunks = 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 607\n// module chunks = 1","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/node_modules/debug/src/debug.js\n// module id = 608\n// module chunks = 1","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/node_modules/ms/index.js\n// module id = 609\n// module chunks = 1","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pouchdb-browser/node_modules/spark-md5/spark-md5.js\n// module id = 610\n// module chunks = 1","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vuvuzela/index.js\n// module id = 611\n// module chunks = 1","/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = 71\n// module chunks = 1"],"sourceRoot":""}